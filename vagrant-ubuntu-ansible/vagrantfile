# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_HOME'] = 'D:/VMware-VMs/vagrant'
ENV['VAGRANT_VMWARE_CLONE_DIRECTORY'] = 'D:/VMware-VMs/vagrant'

Vagrant.configure("2") do |config|

    config.vm.define "ansible" do |ansible|
        ansible.vm.box =  "generic/ubuntu2104"
        
        ansible.vm.provider "vmware_desktop" do |v, override|
            v.gui = true
            v.linked_clone = false
            v.vmx["memsize"] = "8192"
            v.vmx["numvcpus"] = "4"
        end
    
        ansible.vm.provision:shell, inline: <<-SHELL
            echo "root:rootroot" | sudo chpasswd
            sudo timedatectl set-timezone Europe/Berlin
        SHELL
    
        ansible.vm.define "ansible" do |ubuntu|
            ubuntu.vm.hostname = "ansible"
        end

        # Full upgrade
        ansible.vm.provision :shell, inline: "sudo apt update -y && sudo apt upgrade -y"
        ansible.vm.provision :shell, inline: "sudo apt autoremove --purge -y"
        ansible.vm.provision :shell, inline: "sudo reboot"
        
        # Full upgrade
        ansible.vm.provision :shell, inline: "sudo apt update -y && sudo apt upgrade -y"
        ansible.vm.provision :shell, inline: "sudo apt autoremove --purge -y"
        ansible.vm.provision :shell, inline: "sudo reboot"

        ansible.vm.provision:shell, path: "./configure-base.sh"
      
        # Install GIT
        ansible.vm.provision :shell, inline: "sudo apt install git -y -qq"    

        # Install Ansible
        ansible.vm.provision :shell, inline: "sudo apt install ansible -y -qq"   

        # Reboot
        ansible.vm.provision :shell, inline: "sudo reboot"
        
    end

end